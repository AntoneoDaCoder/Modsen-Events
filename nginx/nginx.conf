    include /etc/nginx/mime.types;
    upstream gateway{
        server main-api:8080;
    }
    server {
        listen 80;

        add_header X-Frame-Options "SAMEORIGIN";
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;

        server_name localhost;

        ssl_certificate     /usr/local/share/ca-certificates/cert.crt;
        ssl_certificate_key /etc/ssl/private/key.key;

        location ~ ^/(login|register|refresh)$ {
            proxy_pass http://gateway/api/auth/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires 0;
        }
        location ~ ^/events/(.*)$ {
            proxy_pass http://gateway/api/events/$1$is_args$args;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            client_max_body_size 10M;
            proxy_request_buffering off;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Access-Control-Allow-Origin *;
            add_header Expires 0;
    
        location /static {

            add_header Cache-Control "public, max-age=2592000, immutable";
            add_header Pragma "public";
            add_header Expires $date_gmt+1y;

            try_files $uri $uri/ $uri-$args;
        }

        if ($host != $server_name) {
            return 301 https://$server_name$request_uri;
        }

        error_log /var/log/nginx/error.log error;
    }
#}