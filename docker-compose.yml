services:
  api-gateway:
    container_name: main-api
    build:
      context:  .
      dockerfile: Events.Gateway/Dockerfile
    expose:
      - "8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - JWT_SECRET=events_super_puper_mega_secret_key
    depends_on:
      - api-auth-service
      - api-data-service
    networks:
      - events-network

  api-auth-service:
    container_name: auth-service
    build:
      context:  .
      dockerfile: Events.AuthenticationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8081
      - JWT_SECRET=events_super_puper_mega_secret_key
      - CONNECTION_STRING=Host=db;Port=5432;Database=events-db;Username=user;Password=abcd12345!
    expose:
      - "8081"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - events-network

  api-data-service:
    container_name: data-service
    build:
      context:  .
      dockerfile: Events.DataService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8082
      - JWT_SECRET=events_super_puper_mega_secret_key
      - CONNECTION_STRING=Host=db;Port=5432;Database=events-db;Username=user;Password=abcd12345!
      - REDIS=redis:6379
      - ROOT_DIR=events/images
      - UPLOAD_DIR=/var/lib/data-service/
    expose:
      - "8082"
    volumes:
      - images:/var/lib/data-service/
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - events-network

  migration-tool:
    build:
      context: .
      dockerfile: Events.MigrationTool/Dockerfile
    environment:
       - CONNECTION_STRING=Host=db;Port=5432;Database=events-db;Username=user;Password=abcd12345!
    networks:
      - events-network

  nginx:
    image: nginx:latest
    container_name: events-nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - events-network
    depends_on:
      - api-gateway
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./nginx/mime.types:/etc/nginx/mime.types
      - ./nginx/setup.sh:/docker-entrypoint.d/setup.sh
      - ./nginx/certs:/certs
    command: ["sh", "/docker-entrypoint.d/setup.sh"]

  redis:
    image: redis:alpine
    container_name: events-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s      
      retries: 3        
      start_period: 10s  
      timeout: 5s       
    networks:
      - events-network

  db:
    container_name: events-database
    image:  postgres:latest
    environment:
      POSTGRES_USER:  "user"
      POSTGRES_PASSWORD:  "abcd12345!"
      POSTGRES_DB:  "events-db"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - events-network

volumes:
  postgres-data:
  images:
    
networks:
  events-network:
    name: events-network
    driver: bridge
    external: true
